<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ROM URL Config</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .container {
            max-width: 100%;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        /* ... rest of your CSS styles ... */
    </style>
</head>

<body>
    <div class="container">
        <div class="aui-page-header-main">
            <h2>AI-ROM URL Configuration</h2>
        </div>

        <div>
            <h4 class="current">Current URL:</h4>
            <pre id="currentUrl" class="url-link">Loading...</pre>
        </div>

        <div class="update-group">
            <input type="text" id="newUrl" class="text medium-long-field" placeholder="Enter new API URL">
            <button onclick="updateUrl()" class="aui-button aui-button-primary">Update URL</button>
        </div>

        <div>
            <h4>Select Project:</h4>
            <input type="text" id="projectSearch" class="search-field" placeholder="Search projects...">
            <div id="projectList" class="project-list"></div>
            <button onclick="applySelection()" class="aui-button aui-button-primary">Apply</button>
        </div>
    </div>

    <script>
        let allProjects = [];
        let selectedProjects = [];

        function fetchUrl() {
            const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=getUrl";
            fetch(apiurl, {
                method: 'GET',
                headers: {
                    'Referer': window.location.href,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('HTTP error! Status: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                document.getElementById('currentUrl').textContent = data.apiurl;
                document.getElementById('currentUrl').className = "url-link";
                document.getElementById('newUrl').value = data.apiurl;
            })
            .catch(error => {
                document.getElementById('currentUrl').textContent = 'Error: ' + error;
                document.getElementById('currentUrl').className = "";
            });
        }

        function updateUrl() {
            const newUrl = document.getElementById('newUrl').value;
            const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=updateUrl&url=" + newUrl;

            fetch(apiurl, {
                method: 'GET',
                headers: {
                    'Referer': window.location.href
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('HTTP error! Status: ' + response.status);
                }
                return response.text();
            })
            .then(data => {
                document.getElementById('currentUrl').textContent = newUrl;
                document.getElementById('currentUrl').className = "url-link";
                document.getElementById('newUrl').value = newUrl;
                alert("URL updated successfully!");
            })
            .catch(error => {
                document.getElementById('currentUrl').textContent = 'Error: ' + error;
                document.getElementById('currentUrl').className = "";
                alert("Error: " + error);
            });
        }

        function fetchProjects() {
            const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=getProjects";
            fetch(apiurl, {
                method: 'GET',
                headers: {
                    'Referer': window.location.href,
                    'Content-Type': 'text/plain'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('HTTP error! Status: ' + response.status);
                }
                return response.text();
            })
            .then(data => {
                const projectList = document.getElementById('projectList');
                allProjects = data.split(",");

                allProjects.forEach(project => {
                    const [key, name] = project.split("-");
                    const label = document.createElement('label');
                    const checkbox = document.createElement('input');
                    checkbox.type = "checkbox";
                    checkbox.value = key;
                    if (selectedProjects.includes(key)) {
                        checkbox.checked = true;
                    }
                    label.innerHTML = ` ${checkbox.outerHTML} ${key} - ${name}`;
                    projectList.appendChild(label);
                    projectList.appendChild(document.createElement('br'));
                });
            })
            .catch(error => {
                console.log("Error occurred:", error);
            });
        }

        function fetchSelectedProjects() {
            selectedProjects = Array.from(document.getElementById('projectList').querySelectorAll('input[type="checkbox"]:checked')).map(checkbox => checkbox.value);
        }

        function applySelection() {
            const projectList = document.getElementById('projectList');
            const selectedKeys = Array.from(projectList.querySelectorAll('input[type="checkbox"]:checked')).map(checkbox => checkbox.value);
            const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=applySelection&keys=" + selectedKeys.join(",");

            fetch(apiurl, {
                method: 'GET',
                headers: {
                    'Referer': window.location.href
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('HTTP error! Status: ' + response.status);
                }
                return response.text();
            })
            .then(data => {
                alert('Projects applied successfully!');
            })
            .catch(error => {
                console.log("Error occurred:", error);
                alert("Error: " + error);
            });
        }

        document.getElementById('projectSearch').addEventListener('input', function() {
            const filter = this.value.toLowerCase();
            const projectList = document.getElementById('projectList');
            projectList.innerHTML = '';

            allProjects.filter(project => project.toLowerCase().includes(filter)).forEach(project => {
                const [key, name] = project.split("-");
                const label = document.createElement('label');
                const checkbox = document.createElement('input');
                checkbox.type = "checkbox";
                checkbox.value = key;
                checkbox.checked = selectedProjects.includes(key);
                label.innerHTML = ` ${checkbox.outerHTML} ${key} - ${name}`;
                projectList.appendChild(label);
                projectList.appendChild(document.createElement('br'));
            });
        });

        document.addEventListener("DOMContentLoaded", () => {
            fetchUrl();
            fetchProjects();
            fetchSelectedProjects();
        });

        document.getElementById('projectList').addEventListener('change', function() {
            fetchSelectedProjects();
        });
    </script>

</body>

</html>
