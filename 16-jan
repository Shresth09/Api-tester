<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>ROM URL Config</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>
<div class="container">
  <div class="aui-page-header-main">
    <h2>AI-ROM URL Configuration</h2>
  </div>

  <div>
    <h4 class="current">Current URL:</h4>
    <pre id="currentUrl" class="url-link">Loading...</pre>
  </div>

  <div class="update-group">
    <input type="text" id="newUrl" class="text medium-long-field" placeholder="Enter new API URL">
    <button onclick="updateUrl()" class="aui-button aui-button-primary">Update URL</button>
  </div>

  <div>
    <h4>Select Project:</h4>
    <input type="text" id="projectSearch" class="search-field" placeholder="Search projects...">
    <div id="projectList" class="project-list"></div>
    <button onclick="applySelection()" class="aui-button aui-button-primary">Apply</button>
  </div>
</div>

<script>
let allProjects = [];
let selectedProjects = [];

function fetchUrl() {
  const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=getUrl";
  console.log("Fetching URL from: ", apiurl);

  fetch(apiurl, {
    method: 'GET',
    headers: {
      'Referer': window.location.href,
      "Content-Type": 'application/json'
    }
  })
  .then(response => {
    console.log("URL Fetch Response: ", response);
    if (!response.ok) {
      throw new Error('HTTP error! Status: ' + response.status);
    }
    return response.json();
  })
  .then(data => {
    console.log("Fetched URL Data: ", data);
    document.getElementById('currentUrl').textContent = data.apiurl;
    document.getElementById('currentUrl').className = "url-link";
    document.getElementById('newUrl').value = data.apiurl;
  })
  .catch(error => {
    console.log("Error Fetching URL: ", error);
    document.getElementById('currentUrl').textContent = "Error: " + error;
    document.getElementById('currentUrl').className = "";
  });
}

function updateUrl() {
  const newUrl = document.getElementById('newUrl').value;
  const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=updateUrl&url=" + newUrl;
  console.log("Updating URL to: ", newUrl);

  fetch(apiurl, {
    method: 'GET',
    headers: {
      'Referer': window.location.href
    }
  })
  .then(response => {
    console.log("URL Update Response: ", response);
    if (!response.ok) {
      throw new Error('HTTP error! Status: ' + response.status);
    }
    return response.text();
  })
  .then(data => {
    console.log("URL Update Data: ", data);
    document.getElementById('currentUrl').textContent = newUrl;
    document.getElementById('currentUrl').className = "url-link";
    document.getElementById('newUrl').value = newUrl;
    alert("URL updated successfully!");
  })
  .catch(error => {
    console.log("Error Updating URL: ", error);
    document.getElementById('currentUrl').textContent = "Error: " + error;
    document.getElementById('currentUrl').className = "";
    alert("Error: " + error);
  });
}

function fetchProjects() {
  const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=getProjects";
  console.log("Fetching Projects from: ", apiurl);

  fetch(apiurl, {
    method: 'GET',
    headers: {
      "Referer": window.location.href,
      "Content-Type": 'text/plain'
    }
  })
  .then(response => {
    console.log("Projects Fetch Response: ", response);
    if (!response.ok) {
      throw new Error('HTTP error! Status: ' + response.status);
    }
    return response.text();
  })
  .then(data => {
    console.log("Fetched Projects Data: ", data);
    allProjects = data.split(",");
    updateProjectList(); 
  })
  .catch(error => {
    console.log("Error Fetching Projects: ", error);
  });
}

function fetchSelectedProjects() {
  const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=getSelectedProjects";
  console.log("Fetching Selected Projects from: ", apiurl);

  fetch(apiurl, {
    method: 'GET',
    headers: {
      "Referer": window.location.href,
      "Content-Type": 'text/plain'
    }
  })
  .then(response => {
    console.log("Selected Projects Fetch Response: ", response);
    if (!response.ok) {
      throw new Error('HTTP error! Status: ' + response.status);
    }
    return response.text();
  })
  .then(data => {
    console.log("Fetched Selected Projects Data: ", data);
    selectedProjects = data.split(",");
    updateProjectList(); 
  })
  .catch(error => {
    console.log("Error Fetching Selected Projects: ", error);
  });
}

function updateProjectList() {
  const projectList = document.getElementById('projectList');
  projectList.innerHTML = '';

  allProjects.forEach(project => {
    const [key, name] = project.split("-");
    const label = document.createElement('label');
    const checkbox = document.createElement('input');
    checkbox.type = "checkbox";
    checkbox.value = key;

    // Check if the project is selected
    if (selectedProjects.includes(key)) {
      checkbox.checked = true;
    }
    console.log("Project Key: ", key, ", Checked: ", checkbox.checked);

    label.appendChild(checkbox);
    label.appendChild(document.createTextNode(" " + key + " - " + name));
    projectList.appendChild(label);
    projectList.appendChild(document.createElement('br'));
  });

  // Apply search filter if it's active
  const filter = document.getElementById('projectSearch').value.toLowerCase();
  if (filter) {
    filterProjectList(filter);
  }
}

function filterProjectList(filter) {
  console.log("Filter applied: ", filter);
  const projectList = document.getElementById('projectList');
  const labels = projectList.querySelectorAll('label');

  labels.forEach(label => {
    const projectName = label.textContent.toLowerCase();
    if (projectName.includes(filter)) {
      label.style.display = 'block';
    } else {
      label.style.display = 'none';
    }
  });
}

function applySelection() {
  const selectedKeys = Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map(checkbox => checkbox.value);
  const apiurl = window.location.origin + "/jira/plugins/servlet/issuecrud?action=applySelection&keys=" + selectedKeys.join(",");
  console.log("Applying Selected Projects: ", selectedKeys);

  fetch(apiurl, {
    method: 'GET',
    headers: {
      "Referer": window.location.href
    }
  })
  .then(response => {
    console.log("Apply Selection Response: ", response);
    if (!response.ok) {
      throw new Error('HTTP error! Status: ' + response.status);
    }
    return response.text();
  })
  .then(data => {
    console.log("Apply Selection Data: ", data);
    alert('Projects applied successfully!'); 
  })
  .catch(error => {
    console.log("Error Applying Selection: ", error);
    alert("Error: " + error);
  });
}

// Ensure functions are called on page load
document.addEventListener("DOMContentLoaded", function() {
  fetchUrl();
  fetchProjects();
  fetchSelectedProjects(); // Ensure this is called before updateProjectList

  // Attach event listener to the search input
  document.getElementById('projectSearch').addEventListener('input', function() {
    const filter = this.value.toLowerCase();
    filterProjectList(filter);
  });
});
</script>
</body>
</html>