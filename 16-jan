<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ROM URL Config</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Your CSS styles here */
    </style>
</head>
<body>

<div class="container">
    <div class="aui-page-header-main">
        <h2>AI-ROM URL Configuration</h2>
    </div>

    <div>
        <h4 class="current">Current URL:</h4>
        <pre id="currentUrl" class="url-link">Loading...</pre>
    </div>

    <div class="update-group">
        <input type="text" id="newUrl" class="text medium-long-field" placeholder="Enter new API URL">
        <button onclick="updateUrl()" class="aui-button aui-button-primary">Update URL</button>
    </div>

    <div>
        <h4>Select Project:</h4>
        <input type="text" id="projectSearch" class="search-field" placeholder="Search projects...">
        <div id="projectList" class="project-list">
            </div>
        <button onclick="applySelection()" class="aui-button aui-button-primary">Apply</button>
    </div>
</div>

<script>
    let allProjects = [];
    let selectedProjects = []; // Array to store selected project keys

    function fetchUrl() {
        // ... (Your existing fetchUrl function) ...
    }

    function updateUrl() {
        // ... (Your existing updateUrl function) ...
    }

    function fetchProjects() {
        // ... (Your existing fetchProjects function) ...
        allProjects.forEach(project => {
            const [key, name] = project.split("-");
            const label = document.createElement('label');
            const isChecked = selectedProjects.includes(key); 
            label.innerHTML = `<input type="checkbox" value="${key}" ${isChecked ? 'checked' : ''}> ${key} - ${name}`;
            projectList.appendChild(label);
            projectList.appendChild(document.createElement('br'));
        });

        // Add event listener to checkboxes
        const checkboxes = document.querySelectorAll('#projectList input[type="checkbox"]');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', () => {
                updateSelectedProjects(checkbox.value, checkbox.checked);
            });
        });
    }

    function fetchSelectedProjects() {
        // ... (Your existing fetchSelectedProjects function) ...
        // Update selectedProjects array based on server response
        selectedProjects = data.split(","); 
    }

    function updateSelectedProjects(key, isChecked) {
        if (isChecked) {
            selectedProjects.push(key);
        } else {
            const index = selectedProjects.indexOf(key);
            if (index > -1) {
                selectedProjects.splice(index, 1);
            }
        }
    }

    function applySelection() {
        // ... (Your existing applySelection function) ...
    }

    document.getElementById('projectSearch').addEventListener('input', function() {
        const filter = this.value.toLowerCase();
        const projectList = document.getElementById('projectList');
        projectList.innerHTML = ''; 

        allProjects.filter(project => project.toLowerCase().includes(filter)).forEach(project => {
            const [key, name] = project.split("-");
            const label = document.createElement('label');
            const isChecked = selectedProjects.includes(key); 
            label.innerHTML = `<input type="checkbox" value="${key}" ${isChecked ? 'checked' : ''}> ${key} - ${name}`;
            projectList.appendChild(label);
            projectList.appendChild(document.createElement('br'));
        });
    });

    document.addEventListener("DOMContentLoaded", fetchUrl);
    document.addEventListener("DOMContentLoaded", fetchProjects);
    document.addEventListener("DOMContentLoaded", fetchSelectedProjects);

</script>

</body>
</html>
