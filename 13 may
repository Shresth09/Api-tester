public void processTaInput(JsonNode requestBody, String jiraToken, String jiraNamBaseUrl) {
    JsonNode taInputArray = requestBody.path("taInput");

    if (taInputArray.isArray()) {
        for (JsonNode item : taInputArray) {
            Map<String, String> taDataMap = new HashMap<>();

            String planviewID = item.path("planviewID").asText("");
            taDataMap.put("planviewID", planviewID);
            taDataMap.put("asa_approval_date", item.path("asa_approval_date").asText(""));
            taDataMap.put("architect_soeid", item.path("architect_soeid").asText(""));
            taDataMap.put("asa_override_request_date", item.path("asa_override_request_date").asText(""));
            taDataMap.put("asa_override_decision_date", item.path("asa_override_decision_date").asText(""));
            taDataMap.put("asa_override_appr_soeid", item.path("asa_override_appr_soeid").asText(""));
            taDataMap.put("asa_architectural_significance", item.path("asa_architectural_significance").asText(""));
            taDataMap.put("asa_status", item.path("asa_status").asText(""));

            // JIRA Query using existing logic
            String jql = "\"Planview ID\" ~ " + planviewID + " and issuetype = Planview";

            HttpHeaders headers = new HttpHeaders();
            headers.set("Authorization", "Bearer " + jiraToken);
            headers.set("Accept", MediaType.APPLICATION_JSON_VALUE);

            HttpEntity<String> entity = new HttpEntity<>(headers);

            String urlToSend = UriComponentsBuilder.fromHttpUrl(jiraNamBaseUrl)
                .path("/rest/api/latest/search")
                .queryParam("jql", jql)
                .queryParam("expand", "names")
                .build()
                .toUriString();

            try {
                ResponseEntity<JsonNode> response = restTemplate.exchange(
                    urlToSend, HttpMethod.GET, entity, JsonNode.class);

                // Call your next method using response body and taDataMap
                handleJiraResponse(response.getBody(), taDataMap);

            } catch (RestClientException e) {
                System.err.println("Failed for Planview ID: " + planviewID + " - " + e.getMessage());
            }
        }
    } else {
        System.err.println("'taInput' is missing or not an array.");
    }
}