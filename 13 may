public void processTaInput(String requestBodyString, String jiraToken, String jiraNamBaseUrl) {
    ObjectMapper mapper = new ObjectMapper();

    try {
        JsonNode requestBody = mapper.readTree(requestBodyString);
        JsonNode taInputArray = requestBody.path("taInput");

        if (taInputArray.isArray()) {
            for (JsonNode item : taInputArray) {
                Map<String, String> taDataMap = new HashMap<>();

                String planviewID = item.path("planviewID").asText("");
                taDataMap.put("planviewID", planviewID);
                taDataMap.put("asa_approval_date", item.path("asa_approval_date").asText(""));
                taDataMap.put("architect_soeid", item.path("architect_soeid").asText(""));
                taDataMap.put("asa_override_request_date", item.path("asa_override_request_date").asText(""));
                taDataMap.put("asa_override_decision_date", item.path("asa_override_decision_date").asText(""));
                taDataMap.put("asa_override_appr_soeid", item.path("asa_override_appr_soeid").asText(""));
                taDataMap.put("asa_architectural_significance", item.path("asa_architectural_significance").asText(""));
                taDataMap.put("asa_status", item.path("asa_status").asText(""));

                String jql = "\"Planview ID\" ~ " + planviewID + " and issuetype = Planview";

                HttpHeaders headers = new HttpHeaders();
                headers.set("Authorization", "Bearer " + jiraToken);
                headers.set("Accept", MediaType.APPLICATION_JSON_VALUE);

                HttpEntity<String> entity = new HttpEntity<>(headers);

                String urlToSend = UriComponentsBuilder.fromHttpUrl(jiraNamBaseUrl)
                        .path("/rest/api/latest/search")
                        .queryParam("jql", jql)
                        .queryParam("expand", "names")
                        .build()
                        .toUriString();

                try {
                    ResponseEntity<JsonNode> response = restTemplate.exchange(
                            urlToSend, HttpMethod.GET, entity, JsonNode.class);

                    // Pass response and taDataMap to next step
                    handleJiraResponse(response.getBody(), taDataMap);

                } catch (RestClientException e) {
                    System.err.println("Failed JIRA lookup for Planview ID: " + planviewID + " - " + e.getMessage());
                }
            }
        } else {
            System.err.println("taInput is not an array or is missing.");
        }

    } catch (JsonProcessingException e) {
        System.err.println("Invalid JSON in requestBody: " + e.getMessage());
    }
}