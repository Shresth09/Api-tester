Absolutely! Let's create a simple button using a web panel in the administration section.

### Step-by-Step Guide:

1. **Define the Web Panel in `atlassian-plugin.xml`**
2. **Create the Velocity Template**

### 1. `atlassian-plugin.xml`

Place the web panel in the administration menu to make the button accessible:

```xml
<atlassian-plugin key="AI_Plugin_Key" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}"/>
        <param name="plugin-icon">images/plugin_logo.png</param>
        <param name="plugin-logo">images/plugin_logo.png</param>
    </plugin-info>

    <!-- Web section in the admin applications menu -->
    <web-section key="admin_applications_section" location="admin_plugins_menu">
        <label key="admin_applications_section.label">Plugin - Admin Configuration</label>
    </web-section>

    <!-- Web panel for the configuration button -->
    <web-panel key="ai-rqm-config-panel" location="admin_plugins_menu/admin_applications_section" weight="10">
        <resource type="velocity" name="view" location="templates/config-button.vm"/>
    </web-panel>

    <!-- Web panel for the main plugin functionality -->
    <web-panel key="AI-RQM-plugin" location="atl.jira.view.issue.right.context" weight="18">
        <resource type="velocity" name="view" location="templates/popup.vm"/>
    </web-panel>
</atlassian-plugin>
```

### 2. Velocity Template

Create a simple Velocity template for the button. When clicked, this button can open a modal or redirect to another page.

**Template Path:**

`src/main/resources/templates/config-button.vm`

**Template Content:**

```html
<!-- config-button.vm -->
<!-- Button styled for the configuration -->
<a id="show-config" class="aui-button aui-button-primary">Configure AI RQM Plugin</a>

<!-- Modal Structure (Optional) -->
<div id="config-modal" class="aui-dialog2 aui-dialog2-medium" role="dialog" aria-hidden="true" style="display:none;">
    <header class="aui-dialog2-header">
        <h2 class="aui-dialog2-header-main">AI RQM Plugin Configuration</h2>
        <a class="aui-dialog2-header-close">
            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
        </a>
    </header>
    <div class="aui-dialog2-content">
        <div id="config-form-container">
            <!-- Form will be loaded here -->
            <form id="api-config-form">
                <h3>AI RQM Plugin Configuration</h3>
                <label for="apiUrl">API URL:</label>
                <input type="text" id="apiUrl" name="apiUrl"/>
                <button type="submit" class="aui-button aui-button-primary">Save</button>
            </form>
            <p id="config-status"></p>
        </div>
    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <button id="close-config" class="aui-button aui-button-primary">Close</button>
        </div>
    </footer>
</div>

<script type="text/javascript">
    function initConfig() {
        console.log("Initializing Configuration...");

        // Ensure event listeners are attached only once
        if (AJS.$("#show-config").length && !AJS.$("#show-config").data('events-attached')) {
            console.log("Attaching event listeners for configuration...");

            // Show the modal on button click
            AJS.$("#show-config").click(function() {
                console.log("Config Button clicked!");
                jQuery("#config-modal").show();
                AJS.dialog2("#config-modal").show();
            });

            // Close the modal
            AJS.$("#close-config, .aui-dialog2-header-close").on("click", function() {
                console.log("Closing configuration modal");
                AJS.dialog2("#config-modal").hide();
            });

            AJS.$("#show-config").data('events-attached', true);
        }
    }

    document.addEventListener("DOMContentLoaded", function() {
        initConfig();
        JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function() {
            initConfig();
        });
    });
</script>

<script type="module">
    AJS.toInit(function() {
        jQuery(document).ready(function() {
            initConfig();
        });
    });
</script>
```

### Deployment Steps

1. **Compile and Package**: Run the `atlas-package` command to compile and package your plugin.
2. **Deploy the Plugin**: Deploy the generated JAR file to your JIRA instance.
3. **Restart JIRA**: Restart JIRA to ensure the changes take effect.
4. **Navigate to the Configuration Page**: Go to the Administration > Add-ons page, and you should see the "Configure AI RQM Plugin" button. Clicking this button should open the modal or perform the desired action.

This setup should create a simple button within the administration section using a web panel. Let me know if you need any further assistance![43dcd9a7-70db-4a1f-b0ae-981daa162054](https://github.com/DamianFekete/atlassian-sdk-docs/tree/68e8bb366f119c7926cbba0218cc87eb775ad544/content%2Fserver%2Fframework%2Fatlassian-sdk%2Frun-wired-tests-with-the-plugin-test-console.md?citationMarker=43dcd9a7-70db-4a1f-b0ae-981daa162054 "1")[43dcd9a7-70db-4a1f-b0ae-981daa162054](https://github.com/MrScriptMaster/Atlassian-Plugin-SDK-Guide/tree/487020ee86c1fc9f31b5476160fcecad2520fcf9/docs%2Fatlassian_plugin_sdk.md?citationMarker=43dcd9a7-70db-4a1f-b0ae-981daa162054 "2")[43dcd9a7-70db-4a1f-b0ae-981daa162054](https://github.com/andmikey/andmikey.github.io/tree/a09f5641b6f7f3c6105e34089762fe9087ae0e00/Coursework_files%2Fbatch.js?citationMarker=43dcd9a7-70db-4a1f-b0ae-981daa162054 "3")








#set( $baseUrl = $action.getPluginBaseUrl() ) 

<a id="show-config" href="$baseUrl/configure">Configure AI RQM Plugin</a>

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function() {
        console.log("Button loaded!");
        AJS.$("#show-config").click(function() {
            // You can add more specific actions here if needed
            console.log("Configure AI RQM Plugin button clicked!");
        });
    });
</script>
