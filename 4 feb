#if ($webResourceManager)
    $webResourceManager.requireResourcesForContext("atl.general")
#end

<style type="text/css">
    /* Hide the entire field group for the Score custom field */
    .field-group label[for="customfield_10001"],
    .field-group input#customfield_10001,
    .field-group #customfield_10001-description {
        display: none !important;
    }

    /* Alternatively, hide the parent .field-group div */
    .field-group label[for="customfield_10001"] {
        display: none !important;
    }

    .field-group label[for="customfield_10001"] ~ *,
    .field-group label[for="customfield_10001"] {
        display: none !important;
    }
</style>

<!-- Your existing HTML content -->



function fetchDescriptionScore(issueKey) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/Description-Score";

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'GET',
        dataType: 'json',
        success: function(response) {
            if (response && response.value !== undefined) {
                AJS.$("#score-value").text(response.value);
                console.log("Fetched score value:", response.value);
            } else {
                AJS.$("#score-value").text("Click button to calculate score");
                console.log("Score value not found");
            }
        },
        error: function(xhr, status, error) {
            AJS.$("#score-value").text("Error fetching data");
            console.log("Error fetching issue property:", error);
            console.log("Response:", xhr.responseText);
        }
    });
}

AJS.toInit(function() {
    var issueKey = getIssueKey(); // Implement this function to retrieve the current issue key

    if (issueKey) {
        fetchDescriptionScore(issueKey); // Fetch and display the property value
    } else {
        AJS.$("#score-value").text("Issue key not found");
    }
});



curl -X PUT -H "Content-Type: application/json" --data "10.0" -u admin:admin "http://localhost:2990/jira/rest/api/2/issue/NEW-1/properties/Description-Score"



function updateIssueProperty(issueKey, propertyKey, newValue) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/" + propertyKey;

    var data = newValue; // Assign the value directly

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data), // Send the value directly
        success: function() {
            console.log("Issue property value updated successfully!");
        },
        error: function() {
            console.log("Error updating issue property value");
        }
    });
} 






+++++++=+=+=+=+
function updateIssueProperty(issuekey, newValue) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issuekey + "/properties/Description-Score";

    var data = {
        "value": {  //  <--- Key change: Nested inside "value" object
            "score": newValue //  <--- And you can nest it further if needed
        }
    };

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data),
        headers: {
            "X-Atlassian-Token": "no-check" //  <--- Important: Include the token header
        },
        success: function() {
            console.log("Issue property value updated successfully!");
        },
        error: function(error) {
            console.error("Error updating issue property value:", error);
            // Important: Include more detailed error handling here as well
            console.log("Status Code:", error.status);
            console.log("Response Text:", error.responseText);
        }
    });
}







function deleteIssueProperty(issueKey, propertyKey) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/" + propertyKey;

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'DELETE',
        success: function() {
            console.log("Issue property deleted successfully!");
            AJS.$("#score-value").text("Score property deleted");
        },
        error: function() {
            console.log("Error deleting issue property");
            AJS.$("#score-value").text("Error deleting score property");
        }
    });
}

AJS.toInit(function() {
    var issueKey = getIssueKey(); // Ensure you have a function that retrieves the issue key

    if (issueKey) {
        deleteIssueProperty(issueKey, "Description-Score"); // Delete the Description-Score property
    } else {
        AJS.$("#score-value").text("Issue key not found");
    }
});









function updateIssueProperty(issueKey, propertyKey, newValue) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/" + propertyKey;

    var data = {
        value: newValue
    };

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function() {
            console.log("Issue property value updated successfully!");
        },
        error: function() {
            console.log("Error updating issue property value");
        }
    });
}

AJS.toInit(function() {
    var issueKey = getIssueKey(); // Ensure you have a function that retrieves the issue key

    if (issueKey) {
        updateIssueProperty(issueKey, "Description-Score", 10.0); // Update with the new score value
    } else {
        AJS.$("#score-value").text("Issue key not found");
    }
});










function fetchDescriptionScore(issueKey) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/Description-Score";

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'GET',
        dataType: 'json',
        success: function (response) {
            var scoreValue = response.value;

            if (scoreValue != null) {
                AJS.$("#score-value").text(scoreValue);
            } else {
                AJS.$("#score-value").text("Click button to calculate score");
            }
        },
        error: function() {
            AJS.$("#score-value").text("Error fetching data");
        }
    });
}

AJS.toInit(function() {
    var issueKey = getIssueKey(); // Ensure you have a function that retrieves the issue key

    if (issueKey) {
        fetchDescriptionScore(issueKey);
    } else {
        AJS.$("#score-value").text("Issue key not found");
    }
});









function updateIssueProperty(issueKey, propertyKey, newValue) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey + "/properties/" + propertyKey;

    var data = {
        value: newValue
    };

    jQuery.ajax({
        url: jiraApiUrl,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function() {
            console.log("Issue property value updated successfully!");
        },
        error: function() {
            console.log("Error updating issue property value");
        }
    });
}

AJS.toInit(function() {
    var issueKey = getIssueKey(); // Ensure you have a function that retrieves the issue key

    if (issueKey) {
        updateIssueProperty(issueKey, "Description-Score", 10.0); // Update with the new score value
    } else {
        AJS.$("#score-value").text("Issue key not found");
    }
});