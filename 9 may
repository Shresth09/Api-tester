<div>
  <a id="show-popup" class="aui-button">
    <span style="font-size: 24px;">&#10023;</span> <!-- Big star -->
    <span style="font-size: 12px; position: absolute; top: 5px; left: 15px;">&#128966;</span> <!-- Small star -->
    Scan Assist
  </a>
</div>






<button style="font-size: 2em;">
  <span style="color: purple;">&#10023;</span>
  <span style="font-size: 0.5em; color: orangered; position: relative; top: -0.6em; left: 0.8em;">&#128966;</span>
  Click Me
</button>







Yes! If `<textarea>` isn't working properly due to Jira's UI constraints, you can use alternative elements like **`<div>` with content-editable**, or **AUI components**.

### **Alternative 1: Use a `<div>` Instead of a `<textarea>`**
If Jiraâ€™s styling is restricting `<textarea>`, you can replace it with a `<div>` that behaves similarly but **auto-expands** dynamically.

```html
<div id="suggested-summary-content" class="editable-div" contenteditable="true">
    ${suggestedTERSummary}
</div>
```

#### **CSS for Auto-Expanding**
```css
.editable-div {
    width: 100%;
    min-height: 100px;
    height: auto !important;
    overflow-y: hidden;
    white-space: pre-wrap;
    border: 1px solid #A4ACAF;
    padding: 10px;
    resize: none;
    display: block;
}
```

### **Alternative 2: Use AUI Components**
Jira uses Atlassian's UI library (**AUI**), which includes editable fields that work well within Jira plugins. Try this AUI field:

```html
<div class="aui-message aui-message-warning" role="alert">
    <p contenteditable="true">${suggestedTERSummary}</p>
</div>
```
This integrates well with Jira's UI, **avoiding textarea restrictions** while allowing text editing.

### **Why These Work Better**
âœ” `<div contenteditable="true">` **auto-expands** as text increases.  
âœ” **Avoids Jiraâ€™s built-in restrictions** on `<textarea>`.  
âœ” Works smoothly inside Jira plugin web panels.  
âœ” **No scrolling issues**â€”text remains fully visible.  

Try this approach and let me know how it works! ðŸš€
