<web-section name="User License Helper" i18n-name-key="com.vvit.services.websection.configuration.name" key="user-license-helper" location="admin_applications_section" weight="1000">
    <description key="user-license-helper.description">The User License Helper Plugin</description>
    <label key="plugin-urls">Plugin URLs</label>
</web-section>

<web-item name="Configuration" i18n-name-key="com.vvit.services.webitem.configuration.name" key="configuration" section="admin_applications_section/user-license-helper" weight="1000">
    <description key="configuration.description">The Configuration Plugin</description>
    <label key="ai-rqm-url">AI-RQM URL</label>
</web-item>

<web-panel key="user-license-panel" location="atl.admin" weight="200">
    <context-provider class="com.vvit.contextprovider.UserLicenseContextProvider"/>
    <resource type="velocity" name="view" location="templates/user-license-panel.vm"/>
</web-panel>

<rest key="endpoint-rest" path="/endpoint" version="1.0">
    <description>Endpoint REST Service</description>
</rest>





=============================================
=============================================

<div>
    <h2>User License Notification Configuration</h2>
    <a id="create-license-button" class="aui-button aui-button-primary">Create License Notification</a>
</div>

<!-- Modal HTML -->
<div id="create-license-dialog" class="aui-dialog2 aui-dialog2-medium" role="dialog" aria-hidden="true" style="display:none;">
    <header class="aui-dialog2-header">
        <h2 class="aui-dialog2-header-main">Create License Notification</h2>
        <a class="aui-dialog2-header-close">
            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
        </a>
    </header>
    <div class="aui-dialog2-content">
        <form id="license-form">
            <label for="endpoint-name">Endpoint Name:</label>
            <input type="text" id="endpoint-name" name="endpoint-name">
            <label for="endpoint-url">Endpoint URL:</label>
            <input type="url" id="endpoint-url" name="endpoint-url">
        </form>
    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <button id="submit-license-form" class="aui-button aui-button-primary">Submit</button>
            <button class="aui-button aui-button-link">Cancel</button>
        </div>
    </footer>
</div>

<script type="module">
    AJS.toInit(function() {
        jQuery(document).ready(function() {
            initStuff();
        });
    });
</script>

<script type="text/javascript">
    function initStuff() {
        console.log("Initializing License Notification Configuration...");

        if (AJS.$("#create-license-button").length && !AJS.$("#create-license-button").data('events-attached')) {
            console.log("Attaching event listeners...");

            AJS.$("#create-license-button").click(function() {
                console.log("Button clicked!");
                AJS.dialog2("#create-license-dialog").show();
            });

            AJS.$("#submit-license-form").click(function() {
                console.log("Submitting form...");
                var endpointName = AJS.$("#endpoint-name").val();
                var endpointUrl = AJS.$("#endpoint-url").val();

                // Perform an AJAX call to send data to the server
                AJS.$.ajax({
                    url: "/rest/endpoint/1.0/endpoint",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        endpointName: endpointName,
                        endpointUrl: endpointUrl
                    }),
                    success: function(response) {
                        console.log("Data saved successfully!");
                        AJS.dialog2("#create-license-dialog").hide();
                        alert("Data saved successfully!");
                    },
                    error: function(response) {
                        console.log("Failed to save data.");
                        alert("Failed to save data.");
                    }
                });
            });

            AJS.$("#create-license-dialog .aui-dialog2-header-close, #create-license-dialog .aui-button-link").click(function() {
                console.log("Closing modal");
                AJS.dialog2("#create-license-dialog").hide();
                AJS.$("#license-form")[0].reset(); // Reset form fields
            });

            AJS.$("#create-license-button").data('events-attached', true);
        }
    }

    if (typeof jQuery != "undefined") {
        jQuery(document).ready(function() {
            initStuff();
        });
    }

    document.addEventListener("DOMContentLoaded", function() {
        initStuff();
        JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function() {
            initStuff();
        });
    });
</script>


Aaa

=====================================================================================




package com.vvit.plugin.rest;

import com.atlassian.plugins.rest.common.security.AnonymousAllowed;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import java.io.FileWriter;
import java.io.IOException;
import org.json.JSONObject;

@Path("/endpoint")
public class EndpointResource {

    private static final String FILE_PATH = "data/endpoints.json";

    @POST
    @AnonymousAllowed
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response createEndpoint(EndpointData data) {
        // Save the data to a JSON file
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("endpointName", data.getEndpointName());
        jsonObject.put("endpointUrl", data.getEndpointUrl());

        try (FileWriter fileWriter = new FileWriter(FILE_PATH, true)) { // true for appending
            fileWriter.write(jsonObject.toString() + "\n");
        } catch (IOException e) {
            return Response.serverError().entity(e.getMessage()).build();
        }

        return Response.ok().build();
    }
}









==============================================================================================



package com.vvit.plugin.rest;

public class EndpointData {
    private String endpointName;
    private String endpointUrl;

    // Getters and setters
    public String getEndpointName() {
        return endpointName;
    }

    public void setEndpointName(String endpointName) {
        this.endpointName = endpointName;
    }

    public String getEndpointUrl() {
        return endpointUrl;
    }

    public void setEndpointUrl(String endpointUrl) {
        this.endpointUrl = endpointUrl;
    }
}






=====================================================20000



package com.vvit.contextprovider;

import com.atlassian.plugin.webresource.WebResourceManager;
import com.atlassian.sal.api.message.I18nResolver;
import com.atlassian.webresource.api.assembler.PageBuilderService;
import com.atlassian.plugin.web.ContextProvider;

import java.util.Map;

public class UserLicenseContextProvider implements ContextProvider {
    private final I18nResolver i18n;
    private final PageBuilderService pageBuilderService;

    public UserLicenseContextProvider(I18nResolver i18n, PageBuilderService pageBuilderService) {
        this.i18n = i18n;
        this.pageBuilderService = pageBuilderService;
    }

    @Override
    public void init(Map<String, String> params) {
    }

    @Override
    public Map<String, Object> getContextMap(Map<String, Object> context) {
        context.put("baseUrl", pageBuilderService.get().resourcePath().toString());
        return context;
    }
}