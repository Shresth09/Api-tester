Got it. We can use the existing web item and trigger the modal directly without creating a separate button. Hereâ€™s how we can achieve this:

### Update `atlassian-plugin.xml`

Ensure the web item uses the `label` key correctly and it includes the necessary resources to load the modal:

```xml
<atlassian-plugin key="ai-rqm-plugin" name="AI RQM Plugin" plugins-version="2">
    <plugin-info>
        <description>AI RQM Plugin for JIRA</description>
        <version>1.0.0</version>
        <vendor name="Your Company" url="http://example.com"/>
    </plugin-info>

    <!-- Web section for configuration -->
    <web-section
        name="AI RQM Plugin Configuration"
        key="ai-rqm-configuration-section"
        location="admin_applications_section"
        weight="1000">
        <description>The section for configuring AI RQM Plugin</description>
    </web-section>

    <!-- Web item for configuration button -->
    <web-item
        name="Configure AI RQM Plugin"
        key="ai-rqm-configuration-item"
        section="admin_applications_section/ai-rqm-configuration-section"
        weight="10">
        <description>Open the configuration page for AI RQM Plugin</description>
        <label key="ai-rqm-configuration-item.label"/>
        <resource type="velocity" name="view" location="templates/config-button.vm"/>
    </web-item>
</atlassian-plugin>
```

### Velocity Template (`config-button.vm`)

Update the Velocity template to include the modal and ensure it triggers on click:

```html
<!-- config-button.vm -->
<script type="text/javascript">
    jQuery(document).ready(function() {
        // Load the saved URL from local storage
        var savedApiUrl = AJS.storage.getItem('ai-rqm-api-url');

        // Trigger modal on web item click
        jQuery('a[data-web-item-key="ai-rqm-configuration-item"]').on('click', function(event) {
            event.preventDefault();
            jQuery("#config-form-container").html(`
                <form id="api-config-form">
                    <h3>AI RQM Plugin Configuration</h3>
                    <label for="apiUrl">API URL:</label>
                    <input type="text" id="apiUrl" name="apiUrl" value="${savedApiUrl || ''}"/>
                    <button type="submit" class="aui-button aui-button-primary">Save</button>
                </form>
                <p id="config-status"></p>
            `);
            AJS.dialog2("#config-modal").show();
        });

        // Save the URL to local storage on form submission
        jQuery(document).on('submit', '#api-config-form', function(event) {
            event.preventDefault();
            var newApiUrl = jQuery('#apiUrl').val().trim();
            if (newApiUrl) {
                AJS.storage.setItem('ai-rqm-api-url', newApiUrl);
                jQuery('#config-status').text('API URL saved successfully!');
            } else {
                jQuery('#config-status').text('Please enter a valid API URL.');
            }
        });

        // Close the modal
        jQuery('#close-config-modal, .aui-dialog2-header-close').on('click', function() {
            AJS.dialog2("#config-modal").hide();
        });
    });
</script>

<!-- Modal Structure -->
<div id="config-modal" class="aui-dialog2 aui-dialog2-medium" role="dialog" aria-hidden="true" style="display:none;">
    <header class="aui-dialog2-header">
        <h2 class="aui-dialog2-header-main">AI RQM Plugin Configuration</h2>
        <a class="aui-dialog2-header-close">
            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
        </a>
    </header>
    <div class="aui-dialog2-content">
        <div id="config-form-container">
            <!-- Form will be loaded here -->
        </div>
    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <button id="close-config-modal" class="aui-button aui-button-primary">Close</button>
        </div>
    </footer>
</div>
```

### Deployment Steps

1. Place the `config-button.vm` file in the `templates` directory of your plugin.
2. Redeploy your plugin and restart JIRA to apply changes.
3. Verify that clicking the existing web item opens the modal with the configuration form.

This ensures that the web item directly triggers the modal for the API URL configuration without needing an additional button. Let me know if you encounter any issues or need further assistance![43dcd9a7-70db-4a1f-b0ae-981daa162054](https://github.com/andmikey/andmikey.github.io/tree/a09f5641b6f7f3c6105e34089762fe9087ae0e00/Coursework_files%2Fbatch.js?citationMarker=43dcd9a7-70db-4a1f-b0ae-981daa162054 "1")