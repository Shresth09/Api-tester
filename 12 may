<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Circular Progress Bar</title>
    <style>
        body {
            font-family: sans-serif;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f0f0f0;
            margin: 0;
            gap: 30px; /* Space between progress bar and controls */
        }

        .progress-container {
            position: relative;
            width: 200px;
            height: 200px;
        }

        .progress-ring {
            transform: rotate(-90deg); /* Start the circle from the top */
        }

        .progress-ring-track {
            stroke: #e6e6e6; /* Light gray for the background track */
        }

        .progress-ring-bar {
            transition: stroke-dasharray 0.35s ease-out, stroke 0.35s ease-out; /* Smooth animation for progress and color */
            /* Initial color will be set by JS */
        }

        .progress-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 2.5em;
            font-weight: bold;
            color: #333;
        }

        .controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        input[type="number"] {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 1em;
            width: 80px;
            text-align: center;
        }

        button {
            padding: 10px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
        }

        button:hover {
            background-color: #0056b3;
        }

        /* Color classes (will be applied by JavaScript) */
        .red {
            stroke: #ff4d4d; /* Red */
        }

        .yellow {
            stroke: #ffd700; /* Yellow */
        }

        .green {
            stroke: #5cb85c; /* Green */
        }
    </style>
</head>
<body>
    <div class="progress-container">
        <svg class="progress-ring" width="200" height="200">
            <circle class="progress-ring-track"
                    stroke="#e6e6e6"
                    stroke-width="15"
                    fill="transparent"
                    r="90"
                    cx="100"
                    cy="100"/>
            <circle class="progress-ring-bar"
                    stroke-width="15"
                    fill="transparent"
                    r="90"
                    cx="100"
                    cy="100"/>
        </svg>
        <div class="progress-text">0%</div>
    </div>

    <div class="controls">
        <label for="percentageInput">Enter Percentage:</label>
        <input type="number" id="percentageInput" value="60" min="0" max="100">
        <button onclick="updateProgressBar()">Update Progress</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const progressBar = document.querySelector('.progress-ring-bar');
            const progressText = document.querySelector('.progress-text');
            const radius = progressBar.r.baseVal.value;
            const circumference = 2 * Math.PI * radius;

            progressBar.style.strokeDasharray = `${circumference} ${circumference}`;
            progressBar.style.strokeDashoffset = circumference;

            function setProgress(percent) {
                const offset = circumference - (percent / 100) * circumference;
                progressBar.style.strokeDashoffset = offset;
                progressText.textContent = `${percent}%`;

                // Remove existing color classes
                progressBar.classList.remove('red', 'yellow', 'green');

                // Add new color class based on percentage
                if (percent >= 0 && percent <= 40) {
                    progressBar.classList.add('red');
                } else if (percent > 40 && percent <= 70) {
                    progressBar.classList.add('yellow');
                } else if (percent > 70 && percent <= 100) {
                    progressBar.classList.add('green');
                }
            }

            // Make updateProgressBar globally accessible (since it's called from onclick)
            window.updateProgressBar = function() {
                const percentageInput = document.getElementById('percentageInput');
                let percentage = parseInt(percentageInput.value);

                if (isNaN(percentage) || percentage < 0) {
                    percentage = 0;
                } else if (percentage > 100) {
                    percentage = 100;
                }
                percentageInput.value = percentage; // Update input field to clamped value
                setProgress(percentage);
            };

            // Initial state (set to 60% to match the image on load)
            window.updateProgressBar(); // Call it immediately to set initial progress
            
            // Optional: Update on input change as well (real-time feedback)
            document.getElementById('percentageInput').addEventListener('input', () => {
                window.updateProgressBar();
            });
        });
    </script>
</body>
</html>
