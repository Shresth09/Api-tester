function createAndManageModal(modalId, contentHtml) {
    // 1. Define the HTML structure of the modal dynamically
    var modalHtml = `
        <div id="${modalId}" class="aui-dialog2 aui-dialog2-medium" role="dialog" aria-hidden="true">
            <header class="aui-dialog2-header">
                <img src="${$logo}" alt="Logo" style="height: 50px; ">
                <a class="aui-dialog2-header-close">
                    <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
                </a>
            </header>
            <div class="aui-dialog2-content">
                <div id="${modalId}-content">${contentHtml}</div>
            </div>
            <footer class="aui-dialog2-footer">
                <div class="aui-dialog2-footer-actions">
                    <button id="${modalId}-download-button" class="aui-button">
                        <span class="aui-icon aui-icon-small aui-iconfont-download"></span> Download Report
                    </button>
                    <button id="${modalId}-close-button" class="aui-button aui-button-primary">Close</button>
                </div>
            </footer>
        </div>
    `;

    // 2. Append the new modal HTML to the body
    AJS.$("body").append(modalHtml);

    // 3. Initialize and show the dialog2 component on the *newly added* modal
    var dialog = AJS.dialog2("#" + modalId);
    dialog.show();

    // 4. Attach the event listener for closing the *new* modal
    AJS.$("#" + modalId + "-close-button, #" + modalId + " .aui-dialog2-header-close").click(function() {
        dialog.hide(); // Use the dialog object if available
        setTimeout(function() {
            AJS.$("#" + modalId).remove();
            console.log("Modal with ID '" + modalId + "' destroyed.");
        }, 300);
    });

    // 5. Attach event listener for the download button
    AJS.$("#" + modalId + "-download-button").click(function() {
        var downloadVar = AJS.$("#" + modalId + "-content").html();
        var jiraIssueReffUrl = AJS.params.baseURL + "/browse/" + globalIssueKey;

        // Create a new window for printing (not necessarily a PDF download)
        var printWindow = window.open('', '_blank');
        printWindow.document.open();
        printWindow.document.write('<html><head><title>Print</title></head><body>' + downloadVar + '</body></html>');
        printWindow.document.close();
        printWindow.focus();
        printWindow.print();
        printWindow.close();
    });

    // Return the modal's ID so you can potentially interact with it further
    return modalId;
}

// Example of how you might call this function on a button click:
AJS.$("#show-popup").click(function() {
    console.log("Show popup clicked");

    var initialContent = "Loading data..."; // You'll likely replace this with fetched data
    var myModalId = createAndManageModal("myCustomModal", initialContent);

    // You can now use 'myModalId' if you need to interact with the modal later
    // For example, to update its content after an AJAX call:
    // AJS.$.ajax({
    //     url: "/your/api/endpoint",
    //     success: function(data) {
    //         AJS.$("#" + myModalId + "-content").html(data);
    //     }
    // });
});
 






_=_==_=_=_=_+_+_+_+_
=_=_=_=_=_=_=+_





AJS.$("#show-popup").click(function() {
    console.log("Show popup clicked");

    var initialContent = "Loading data...";
    var myModalId = createAndManageModal("myCustomModal", initialContent);

    // You can now use 'myModalId' if you need to interact with the modal later
    // For example, to update its content:
    // AJS.$("#" + myModalId + "-content").html("New data loaded!");

    // You might also make an AJAX call here to load dynamic content
    // AJS.$.ajax({
    //     url: "/your/api/endpoint",
    //     success: function(data) {
    //         AJS.$("#" + myModalId + "-content").html(data);
    //     }
    // });
});

function createAndManageModal(modalId, contentHtml) {
    // 1. Define the HTML structure of the modal dynamically
    var modalHtml = `
        <div id="${modalId}" class="aui-dialog2 aui-dialog2-medium" role="dialog" aria-hidden="true">
            <header class="aui-dialog2-header">
                <img src="${$logo}" alt="Logo" style="height: 50px; ">
                <a class="aui-dialog2-header-close">
                    <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
                </a>
            </header>
            <div class="aui-dialog2-content">
                <div id="${modalId}-content">${contentHtml}</div>
            </div>
            <footer class="aui-dialog2-footer">
                <div class="aui-dialog2-footer-actions">
                    <button id="${modalId}-download-button" class="aui-button">
                        <span class="aui-icon aui-icon-small aui-iconfont-download"></span> Download
                    </button>
                    <button id="${modalId}-close-button" class="aui-button aui-button-primary">Close</button>
                </div>
            </footer>
        </div>
    `;

    // 2. Append the new modal HTML to the body
    AJS.$("body").append(modalHtml);

    // 3. Initialize and show the dialog2 component on the *newly added* modal
    var dialog = AJS.dialog2("#" + modalId);
    dialog.show();

    // 4. Attach the event listener for closing the *new* modal
    AJS.$("#" + modalId + "-close-button, #" + modalId + " .aui-dialog2-header-close").click(function() {
        dialog.hide(); // Use the dialog object if available
        setTimeout(function() {
            AJS.$("#" + modalId).remove();
            console.log("Modal with ID '" + modalId + "' destroyed.");
        }, 300);
    });

    // 5. (Optional) Attach event listener for the download button (you can customize this)
    AJS.$("#" + modalId + "-download-button").click(function() {
        console.log("Download button clicked for modal '" + modalId + "'");
        // Add your download logic here
    });

    // Return the modal's ID so you can potentially interact with it further
    return modalId;
}
