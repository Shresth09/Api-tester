public void updateJiraCustomFields(String issueKey, String checkboxFieldId, String checkboxValue, 
                                   String textFieldId, String textFieldValue, 
                                   String jiraBaseUrl, HttpHeaders headers) {
    try {
        // Construct the Jira URL
        String jiraUpdateUrl = jiraBaseUrl + "/rest/api/2/issue/" + issueKey;

        // Build JSON payload dynamically
        StringBuilder requestBodyBuilder = new StringBuilder();
        requestBodyBuilder.append("{ \"fields\": {");

        // Handle Checkboxes field (checkboxFieldId)
        if (checkboxValue == null) {
            requestBodyBuilder.append("\"").append(checkboxFieldId).append("\": null, ");
        } else {
            requestBodyBuilder.append("\"").append(checkboxFieldId).append("\": { \"value\": \"").append(checkboxValue).append("\" }, ");
        }

        // Handle Text Field (textFieldId)
        if (textFieldValue == null) {
            requestBodyBuilder.append("\"").append(textFieldId).append("\": null");
        } else {
            requestBodyBuilder.append("\"").append(textFieldId).append("\": \"").append(textFieldValue).append("\"");
        }

        // Close JSON payload
        requestBodyBuilder.append(" } }");
        String requestBody = requestBodyBuilder.toString();

        // Create HTTP entity with headers
        HttpEntity<String> entity = new HttpEntity<>(requestBody, headers);

        // Send PUT request to Jira
        RestTemplate restTemplate = new RestTemplate();
        ResponseEntity<String> response = restTemplate.exchange(jiraUpdateUrl, HttpMethod.PUT, entity, String.class);

        // Log response
        System.out.println("Jira response: " + response.getBody());
    } catch (Exception e) {
        e.printStackTrace();
    }
}