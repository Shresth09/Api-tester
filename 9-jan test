<!-- templates/issuecrud-page.vm -->
<html>
<head>
    <title>Fetch and Display URL</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>Fetch and Display URL</h1>
    <p><strong>Current URL:</strong> <span id="current-url">Loading...</span></p>

    <script type="module">
        AJS.toInit(function() {
            console.log("Document ready, fetching URL...");
            jQuery.ajax({
                url: AJS.params.baseURL + "/plugins/servlet/issuecrud",
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    const apiUrl = response.apiUrl;
                    console.log("Fetched URL:", apiUrl);
                    AJS.$("#current-url").text(apiUrl);
                },
                error: function() {
                    console.log("Failed to fetch URL");
                    AJS.$("#current-url").text("Failed to load URL.");
                }
            });
        });
    </script>
</body>
</html>






package com.example.plugins.tutorial.servlet;

import com.atlassian.sal.api.pluginsettings.PluginSettings;
import com.atlassian.sal.api.pluginsettings.PluginSettingsFactory;
import com.atlassian.templaterenderer.TemplateRenderer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

public class IssueCRUD extends HttpServlet {

    private static final Logger log = LoggerFactory.getLogger(IssueCRUD.class);
    private final TemplateRenderer templateRenderer;
    private final PluginSettingsFactory pluginSettingsFactory;
    private static final String PLUGIN_STORAGE_KEY = "com.example.plugins.tutorial.servlet.IssueCRUD";
    private static final String DEFAULT_API_URL = "http://default-api-url.com"; // Default URL

    public IssueCRUD(TemplateRenderer templateRenderer, PluginSettingsFactory pluginSettingsFactory) {
        this.templateRenderer = templateRenderer;
        this.pluginSettingsFactory = pluginSettingsFactory;
    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        PluginSettings pluginSettings = pluginSettingsFactory.createGlobalSettings();
        String apiUrl = (String) pluginSettings.get(PLUGIN_STORAGE_KEY + ".apiUrl");
        if (apiUrl == null) {
            apiUrl = DEFAULT_API_URL; // Use default URL if not set
        }
        resp.setContentType("application/json");
        resp.getWriter().write("{\"apiUrl\": \"" + apiUrl + "\"}");
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        // Leaving POST handling for now
    }
} 