I understand. Let's create an additional span to show the text when there's no score, and use the progress bar only when there's a valid score.

### Step 1: Update HTML Structure

Add an additional span for the text when there is no score:

```html
<div class="custom-box">
    <div><a id="show-popup" class="aui-button">Analyze Description</a></div>
    <div class="description-score-container">
        <span class="description-text">Description score:</span>
        <span id="no-score-text" style="display: none; color: gray;">Click Button to check score</span>
        <div class="progress-container" style="display: none;">
            <div id="score-progress-bar" class="progress-bar"></div>
        </div>
    </div>
</div>
```

### Step 2: Update JavaScript

Modify the `updateScoreDisplay` function to show the appropriate element based on the score's presence.

```javascript
function updateScoreDisplay(score) {
    var progressBar = AJS.$("#score-progress-bar");
    var progressContainer = AJS.$(".progress-container");
    var noScoreText = AJS.$("#no-score-text");

    // Check if the score is valid
    if (score === null || score === "" || isNaN(score)) {
        progressContainer.hide(); // Hide the progress bar container
        noScoreText.show(); // Show the no-score text
    } else {
        var scorePercent = Math.min(Math.max(score, 0), 100); // Clamp value between 0 and 100
        progressBar.css("width", scorePercent + "%");
        progressBar.text(score + "%");
        progressContainer.show(); // Show the progress bar container
        noScoreText.hide(); // Hide the no-score text

        // Remove existing color classes
        progressBar.removeClass("red yellow green gray");

        // Apply color based on score
        if (score <= 40) {
            progressBar.addClass("red");
        } else if (score > 40 && score <= 60) {
            progressBar.addClass("yellow");
        } else {
            progressBar.addClass("green");
        }
    }
}
```

### Step 3: Ensure CSS is Correct

Ensure your CSS defines the styles for both the progress bar and text:

```css
<style>
.description-score-container {
    display: flex;
    align-items: center; /* Align items vertically centered */
    gap: 10px; /* Space between text and bar */
}

.progress-container {
    flex-grow: 1; /* Allow the progress bar to take available space */
    background-color: #ccc;
    border-radius: 25px;
    overflow: hidden;
    height: 16px; /* Adjust this value to change the thickness */
}

.progress-bar {
    height: 100%; /* Make it full height of the container */
    width: 0;
    text-align: center;
    line-height: 16px; /* Same as container height to center text vertically */
    color: white;
    border-radius: 25px;
    transition: width 0.5s ease, background-color 0.5s ease;
}

.progress-bar.red {
    background-color: #ee7359;
}

.progress-bar.yellow {
    background-color: gold;
    color: black; /* Yellow needs black text for better readability */
}

.progress-bar.green {
    background-color: #87C55F;
}

#no-score-text {
    color: gray;
}
</style>
```

### Implementing JavaScript Calls

Ensure your code calls `updateScoreDisplay` in the appropriate places:

**On Page Load (after fetching the score value):**

```javascript
function fetchCustomFieldValue(issueKey) {
    var jiraApiUrl = AJS.params.baseURL + "/rest/api/2/issue/" + issueKey;
    jQuery.ajax({
        url: jiraApiUrl,
        type: 'GET',
        dataType: 'json',
        success: function(response) {
            var customFieldId = '$scoreFieldKey';
            var scoreValue = response.fields[customFieldId];
            updateScoreDisplay(scoreValue);
        },
        error: function() {
            updateScoreDisplay(null); // Error fetching data
        }
    });
}
```

**After Calculating or Fetching the Score (e.g., in the API call success function):**

```javascript
if (cscore != null) {
    updateScoreDisplay(cscore);
} else {
    updateScoreDisplay(null); // No score available
}
```

**Handling Errors:**

```javascript
error: function(xhr, status, error) {
    AJS.$("#api-response").html("<p style='color: red; font: Citi-Sans-Text-Regular;'>Error: Failed to fetch data. Please verify configured endpoint status: " + xhr.status + ", Error: " + error + "</p>");
    AJS.dialog2("#api-modal").show();
    updateScoreDisplay(null); // No score available due to error
}
```

With these updates, the progress bar will be shown only when thereâ€™s a valid score, and an additional text in gray will be displayed when there is no score available. Let me know if this meets your needs or if you need further assistance! ðŸš€