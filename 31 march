import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.http.ResponseEntity;

public String processApiResponse(ResponseEntity<String> response, String query) {
    try {
        // Parse the API response into a JSON object
        JSONObject responseJson = new JSONObject(response.getBody());

        // Extract the total number of issues
        int total = responseJson.getInt("total");

        // Get the "issues" array
        JSONArray issuesArray = responseJson.getJSONArray("issues");

        // Prepare the result JSON structure
        StringBuilder resultJson = new StringBuilder("{\"items\": [");

        // Iterate through the issues
        for (int i = 0; i < total; i++) {
            JSONObject issueObject = issuesArray.getJSONObject(i);

            // Fetch the summary field of the issue
            String summary = issueObject.getJSONObject("fields").getString("summary");

            // Highlight the query keyword in the summary
            String highlighted = summary.replace(query, "\u003Cb\u003E" + query + "\u003C/b\u003E");

            // Add the result to the response
            resultJson.append(String.format(
                "{\"value\": \"%s\", \"html\": \"%s\", \"label\": \"%s\"}",
                summary, highlighted, summary
            ));

            // Add a comma if this isn't the last item
            if (i < total - 1) {
                resultJson.append(",");
            }
        }

        // Close the JSON structure
        resultJson.append("]}");

        // Return the final result JSON
        return resultJson.toString();

    } catch (Exception ex) {
        // Handle any errors gracefully
        ex.printStackTrace();
        return "{\"error\": \"Failed to process response\"}";
    }
}